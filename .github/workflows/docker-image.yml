name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.VPS_SSH_KEY }}
    
    - name: Test SSH Connection
      run: ssh -v -o StrictHostKeyChecking=no ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} echo "SSH connection successful"
      env:
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
        
    - name: Build Docker image
      run: |
        docker build -t juice-client .
        
    - name: Deploy to VPS
      env:
        VPS_USER: ${{ secrets.VPS_USER }}
        VPS_HOST: ${{ secrets.VPS_HOST }}
        FRONTEND_IMAGE: juice-client  # Adjust with your Docker image name
      run: |
        # Remove existing containers/images
        ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << EOF
          # Stop and remove any existing container if it exists
          docker ps -q -f name=juice-frontend | xargs -r docker stop
          docker ps -a -q -f name=juice-frontend | xargs -r docker rm
          
          # Remove existing image if it exists
          if docker image inspect $FRONTEND_IMAGE > /dev/null 2>&1; then
            docker rmi $FRONTEND_IMAGE
          fi
        EOF
        
        # Copy Docker image to VPS
        docker save $FRONTEND_IMAGE | bzip2 | ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST 'bunzip2 | docker load'

        # Run Docker container on VPS
        ssh -o StrictHostKeyChecking=no $VPS_USER@$VPS_HOST << EOF
          # Run new container
          docker run -d --name juice-frontend -p 8080:8080 $FRONTEND_IMAGE
        EOF
